macro "Batch GLCM Measure" {
    dir = getDirectory("Choose a Directory ");
    list = getFileList(dir);
    step = getNumber("Enter the size of the step in pixels: ", 1);
    setBatchMode(true);
    print("#,","Angular Second Moment,","Contrast,","Correlation,","Inverse Difference Moment,","Entropy,");

    for (i=0; i<list.length; i++) {
        path = dir+list[i];
        showProgress(i, list.length);
        if (!endsWith(path,"/")) open(path);
        if (nImages>=1) {
            run("GLCM Texture", "enter="+step+ " select=[0 degrees] angular contrast correlation inverse entropy");
            asm = getResult("Angular Second Moment",0); 
            contrast = getResult("Contrast",0);
            correlation = getResult("Correlation",0);
            idm = getResult("Inverse Difference Moment   ",0); //Extra spaces needed due to source code error
            entropy = getResult("Entropy",0);
            print(list[i],",",asm,",",contrast,",",correlation,",",idm,",",entropy);
			
			run("GLCM Texture", "enter="+step+ " select=[90 degrees] angular contrast correlation inverse entropy");
            asm = getResult("Angular Second Moment",0); 
            contrast = getResult("Contrast",0);
            correlation = getResult("Correlation",0);
            idm = getResult("Inverse Difference Moment   ",0); //Extra spaces needed due to source code error
            entropy = getResult("Entropy",0);
            print(list[i],",",asm,",",contrast,",",correlation,",",idm,",",entropy);
			
			run("GLCM Texture", "enter="+step+ " select=[180 degrees] angular contrast correlation inverse entropy");
            asm = getResult("Angular Second Moment",0); 
            contrast = getResult("Contrast",0);
            correlation = getResult("Correlation",0);
            idm = getResult("Inverse Difference Moment   ",0); //Extra spaces needed due to source code error
            entropy = getResult("Entropy",0);
            print(list[i],",",asm,",",contrast,",",correlation,",",idm,",",entropy);
			
			run("GLCM Texture", "enter="+step+ " select=[270 degrees] angular contrast correlation inverse entropy");
            asm = getResult("Angular Second Moment",0); 
            contrast = getResult("Contrast",0);
            correlation = getResult("Correlation",0);
            idm = getResult("Inverse Difference Moment   ",0); //Extra spaces needed due to source code error
            entropy = getResult("Entropy",0);
            print(list[i],",",asm,",",contrast,",",correlation,",",idm,",",entropy);
			
			close();
        }
    
	}	
}